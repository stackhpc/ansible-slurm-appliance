# Prometheus: http://{login-ip}:9090/

---
- name: Deploy node_exporter
  hosts: all
  tags: node_exporter
  tasks:
    - import_role: name=cloudalchemy.node-exporter

- name: Setup core monitoring software
  hosts: cluster_login[0]
  tags: prometheus
  tasks:
    - import_role: name=cloudalchemy.blackbox-exporter
    - import_role:
        name: cloudalchemy.prometheus
      vars:
        prometheus_targets:
          node:
          - targets:
              "{{ groups['all'] | reject('equalto', 'localhost') | map('extract', hostvars, ['inventory_hostname']) | map('regex_replace', '$', ':9100') | list }}"
            labels:
              env: demo
        prometheus_scrape_configs:
          - job_name: "prometheus"
            metrics_path: "{{ prometheus_metrics_path }}"
            static_configs:
              - targets:
                  - "{{ ansible_fqdn | default(ansible_host) | default('localhost') }}:9090"
          - job_name: "node"
            file_sd_configs:
            - files:
              - "/etc/prometheus/file_sd/node.yml"
            relabel_configs:
            # strip off port
            - source_labels: ['__address__']
              separator:     ':'
              regex:         '(.*):.*'
              target_label:  'instance'
              replacement:   '${1}'

    #- import_role: name=cloudalchemy.alertmanager # TODO: set this up?

- name: Deploy grafana
  hosts: cluster_login[0]
  tags: grafana
  tasks:
    - assert:
        that: grafana_password is defined
        fail_msg: "Must define grafana_password - use `ansible-playbook -e grafana_password=MYPASSWORD ...` "
    - import_role:
        name: cloudalchemy.grafana
      vars:
        grafana_datasources:
          - name: prometheus
            type: prometheus
            url: "{{ ansible_host }}:9090" # default prometheus port
            basicAuth: false
        grafana_dashboards:
          - dashboard_id: 1860 # node exporter, full
            datasource: prometheus
            revision_id: 21
        grafana_security:
            admin_user: grafana
            admin_password: "{{ grafana_password }}"

...
