---

- name: Make directory
  file:
    path: "{{ hpctests_rootdir }}/pingmatrix"
    state: directory

- name: Precreate files to workaround selinux context issues on NFS mounts
  file:
    path: "{{ hpctests_rootdir }}/pingmatrix/{{ item }}"
    state: touch
  loop:
    - mpi_nxnlatbw.c
    - pingmatrix.sh

- name: Copy source
  copy:
    src: mpi_nxnlatbw.c
    dest: "{{ hpctests_rootdir }}/pingmatrix/mpi_nxnlatbw.c"

- name: Create sbatch script
  template:
    src: pingmatrix.sh.j2
    dest: "{{ hpctests_rootdir }}/pingmatrix/pingmatrix.sh"

- name: Run ping matrix
  shell: sbatch --wait pingmatrix.sh
  args:
    chdir: "{{ hpctests_rootdir }}/pingmatrix"

# nxnlatbw outputs ranks, not nodenames which would be more useful for finding issues. The sbatch manpage says nodes provided via --nodelist are sorted, but doesn't specify how.
# Some testing using a "helloworld" program showed it is NOT sorted the same as python's sorted(), it's lexicographical. So we use scontrol to guarantee the same sort order.
# Note this still doesn't fix any non-unique names but we should get a length mis-match at least with that.
# although this looks a bit crazy:
- name: Expand node list
  shell: "scontrol show hostnames {{ openhpc_tests_nodes if openhpc_tests_nodes is defined else (hpctests_computes.stdout_lines | join(',')) }}"
  register: scontrol_hostnames

- name: Create sorted node expression
  shell: "scontrol show hostlistsorted {{ scontrol_hostnames.stdout_lines | join(',') }}"
  register: scontrol_hostlistsorted

- name: Expand node list again
  shell: "scontrol show hostnames {{ scontrol_hostlistsorted.stdout_lines | join(',') }}"
  register: slurm_names

- name: Process output
  plot_nxnlatbw:
    src: "{{ hpctests_rootdir }}/pingmatrix/pingmatrix.sh.out"
    dest: "{{ hpctests_rootdir }}/pingmatrix/pingmatrix.html"
    nodes: "{{ slurm_names.stdout_lines | join(',') }}"
  register: nxnlatbw

- name: Fetch html results table to ansible control host
  fetch:
    src: "{{ hpctests_rootdir }}/pingmatrix/pingmatrix.html"
    dest: "{{ hpctests_outdir }}/pingmatrix.html"
    flat: yes

- name: Summarise results
  debug:
    msg: |
      Summary for pingmatrix (pairwise on {{ slurm_names.stdout_lines | length }} nodes):
      {{ nxnlatbw['stats'] | to_nice_yaml }}
      Tabular output on ansible control host at {{ hpctests_outdir }}/pingmatrix.html
