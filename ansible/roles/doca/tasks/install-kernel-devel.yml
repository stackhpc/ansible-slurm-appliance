---
- name: Get installed kernels
  ansible.builtin.command: dnf list --installed kernel
  register: _ofed_dnf_kernels
  changed_when: false

- name: Determine running kernel
  ansible.builtin.command: uname -r
  register: _ofed_loaded_kernel
  changed_when: false

- name: Check current kernel is newest installed
  ansible.builtin.assert:
    that: _ofed_kernel_current == _ofed_dnf_kernels_newest
    fail_msg: "Kernel {{ _ofed_loaded_kernel.stdout }} is loaded but newer {{ _ofed_dnf_kernels_newest }} is installed: consider rebooting?"
  vars:
    _ofed_kernel_current: >-
      {{ _ofed_loaded_kernel.stdout | regex_replace('\.(?:.(?!\.))+$', '') | regex_replace('\.(?:.(?!\.))+$', '') }}
    # yamllint disable rule:line-length
    _ofed_dnf_kernels_newest: >-
      # yamllint disable-line rule:line-length
      {{ _ofed_dnf_kernels.stdout_lines[1:] | map('split') | map(attribute=1) | map('regex_replace', '\.(?:.(?!\.))+$', '') | community.general.version_sort | last }}
    # yamllint enable rule:line-length
 # dnf line format e.g. "kernel.x86_64  4.18.0-513.18.1.el8_9   @baseos  "

- name: Install matching kernel-devel package
  ansible.builtin.dnf:
    name: "kernel-devel-{{ _ofed_loaded_kernel.stdout | trim }}"
