- name: Remove inventory hosts file
  file:
    path: "{{ cluster_infra_inventory_file }}"
    state: absent
  register: _inventory_file

- name: Error if inventory hosts file exists
  # When creating infra this file must not exist to avoid inventory errors from mismatches
  # between this hosts file and in-memory inventory. Note hosts cannot be deleted from
  # inventory so ensuring the file does not exist before starting the infra role is the 
  # only safe approach.
  assert:
    that: not _inventory_file.changed
    fail_msg: "Inventory file has been deleted - rerun the ansible command now"

- debug:
    msg: |
      terraform_backend_type: {{ terraform_backend_type }}
      terraform_state: {{ terraform_state }}
      cluster_upgrade_system_packages: {{ cluster_upgrade_system_packages | default('undefined') }}

# We need to convert the floating IP id to an address for Terraform
# if we we have cluster_floating_ip, otherwise assume that we're
# assigning the FIP in Terraform and that it will be available in
# outputs.cluster_gateway_ip.
- block:
    - name: Look up floating IP
      include_role:
        name: stackhpc.terraform.infra
        tasks_from: lookup_floating_ip
      vars:
        os_floating_ip_id: "{{ cluster_floating_ip }}"

    - name: Set floating IP address fact
      set_fact:
        cluster_floating_ip_address: "{{ os_floating_ip_info.floating_ip_address }}"
  when: cluster_floating_ip is defined

- name: Install Terraform binary
  include_role:
    name: stackhpc.terraform.install

- name: Make Terraform project directory
  file:
    path: "{{ terraform_project_path }}"
    state: directory

- name: Write backend configuration
  copy:
    content: |
      terraform {
        backend "{{ terraform_backend_type }}" { }
      }
    dest: "{{ terraform_project_path }}/backend.tf"

- name: Template Terraform files into project directory
  template:
    src: >-
      {{ 
        "{}{}.j2".format(
          (
             cluster_terraform_template_dir ~ "/" 
             if cluster_terraform_template_dir is defined 
             else ""
          ),
          item
        )
      }}
    dest: "{{ terraform_project_path }}/{{ item }}"
  loop:
    - outputs.tf
    - providers.tf
    - resources.tf

- name: Provision infrastructure
  include_role:
    name: stackhpc.terraform.infra

- name: Create inventory hosts file to permit ad-hoc uses
  template:
    src: cluster_hosts.yml.j2
    dest: "{{ cluster_infra_inventory_file }}"
  when: terraform_state != 'absent'
