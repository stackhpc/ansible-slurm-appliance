---
- ansible.builtin.debug:
    msg: |
      terraform_backend_type: {{ terraform_backend_type }}
      terraform_state: {{ terraform_state }}
      cluster_upgrade_system_packages: {{ cluster_upgrade_system_packages | default('undefined') }}

# We need to convert the floating IP id to an address for Terraform
# if we we have cluster_floating_ip, otherwise assume that we're
# assigning the FIP in Terraform and that it will be available in
# outputs.cluster_gateway_ip.
- when:
    - cluster_floating_ip is defined
    - cluster_floating_ip
  block:
    - name: Look up floating IP
      azimuth_cloud.terraform.os_floating_ip_info:
        floating_ip: "{{ cluster_floating_ip }}"
      register: cluster_floating_ip_info

    - name: Set floating IP address fact
      ansible.builtin.set_fact:
        cluster_floating_ip_address: "{{ cluster_floating_ip_info.floating_ip.floating_ip_address }}"
- name: Install Terraform binary
  ansible.builtin.include_role:
    name: azimuth_cloud.terraform.install

- name: Make Terraform project directory
  ansible.builtin.file:
    path: "{{ terraform_project_path }}"
    state: directory
    mode: "0755"

- name: Write backend configuration
  ansible.builtin.copy:
    content: |
      terraform {
        backend "{{ terraform_backend_type }}" { }
      }
    dest: "{{ terraform_project_path }}/backend.tf"
    mode: "0644"

- name: Template Terraform files into project directory
  ansible.builtin.template:
    src: >-
      {{
        "{}{}.j2".format(
          (
             cluster_terraform_template_dir ~ "/"
             if cluster_terraform_template_dir is defined
             else ""
          ),
          item
        )
      }}
    dest: "{{ terraform_project_path }}/{{ item }}"
    mode: "0644"
  loop:
    - outputs.tf
    - providers.tf
    - resources.tf

- name: Provision infrastructure
  ansible.builtin.include_role:
    name: azimuth_cloud.terraform.infra
