- debug:
    msg: |
      terraform_backend_type: {{ terraform_backend_type }}
      terraform_state: {{ terraform_state }}
      cluster_upgrade_system_packages: {{ cluster_upgrade_system_packages | default('undefined') }}

# We need to convert the floating IP id to an address for Terraform
# if we we have cluster_floating_ip, otherwise assume that we're
# assigning the FIP in Terraform and that it will be available in
# outputs.cluster_gateway_ip.
- block:
    - name: Look up floating IP
      azimuth_cloud.terraform.os_floating_ip_info:
         floating_ip: "{{ cluster_floating_ip }}"
      register: cluster_floating_ip_info

    - name: Set floating IP address fact
      set_fact:
        cluster_floating_ip_address: "{{ cluster_floating_ip_info.floating_ip.floating_ip_address }}"
  when:
    - cluster_floating_ip is defined
    - cluster_floating_ip

- name: Install Terraform binary
  include_role:
    name: azimuth_cloud.terraform.install

- name: Make Terraform project directory
  file:
    path: "{{ terraform_project_path }}"
    state: directory

- name: Write backend configuration
  copy:
    content: |
      terraform {
        backend "{{ terraform_backend_type }}" { }
      }
    dest: "{{ terraform_project_path }}/backend.tf"

- name: Template Terraform files into project directory
  template:
    src: >-
      {{ 
        "{}{}.j2".format(
          (
             cluster_terraform_template_dir ~ "/" 
             if cluster_terraform_template_dir is defined 
             else ""
          ),
          item
        )
      }}
    dest: "{{ terraform_project_path }}/{{ item }}"
  loop:
    - outputs.tf
    - providers.tf
    - resources.tf

- name: Provision infrastructure
  include_role:
    name: azimuth_cloud.terraform.infra
