- name: Ensure the /exports/cluster directory exists
  file:
    path: /exports/cluster
    state: directory
    owner: slurm
    group: root
    mode: u=rX,g=rwX,o=
  run_once: true
  delegate_to: "{{ groups['control'] | first }}"

- name: Copy /etc/hosts to /exports/cluster
  copy:
    src: /etc/hosts
    dest: /exports/cluster/hosts
    owner: root
    group: root
    mode: u=rw,go=
    remote_src: true
  run_once: true
  delegate_to: "{{ groups['control'] | first }}"

- name: Create hostvars directory
  file:
    path: /exports/cluster/hostvars/{{ inventory_hostname }}/
    state: directory
    owner: slurm
    group: root
    mode: u=rX,g=rwX,o=
  delegate_to: "{{ groups['control'] | first }}"

- name: Template out hostvars
  template:
    src: hostvars.yml.j2
    dest: /exports/cluster/hostvars/{{ inventory_hostname }}/hostvars.yml
    owner: slurm
    group: root
    mode: u=r,g=rw,o=
  delegate_to: "{{ groups['control'] | first }}"

- name: Copy manila share info to /exports/cluster
  copy:
    content: "{{ os_manila_mount_share_info_var | to_nice_yaml }}"
    dest: /exports/cluster/manila_share_info.yml
    owner: root
    group: root
    mode: u=rw,g=r
  run_once: true
  delegate_to: "{{ groups['control'] | first }}"
  when: os_manila_mount_share_info is defined
  vars:
    os_manila_mount_share_info_var:
      os_manila_mount_share_info: "{{ os_manila_mount_share_info }}"

- name: Ensure /exports/cluster/cvmfs directory exists
  file:
    path: /exports/cluster/cvmfs
    state: directory
    owner: root
    group: root
    mode: 0755
  run_once: true
  delegate_to: "{{ groups['control'] | first }}"

- name: Copy EESSI CVMFS config to /exports/cluster
  copy:
    src: /etc/cvmfs/default.local
    dest: /exports/cluster/cvmfs/default.local
    owner: root
    group: root
    mode: 0644
    remote_src: true
  run_once: true
  delegate_to: "{{ groups['control'] | first }}"

- name: Create hostconfig directory
  file:
    path: "/exports/cluster/hostconfig/{{ inventory_hostname }}/"
    state: directory
    owner: root
    group: root
    mode: u=rw,go=
  delegate_to: "{{ groups['control'] | first }}"

- name: Template sssd config 
  import_role:
    name: sssd
    tasks_from: export.yml
  when: "'sssd' in group_names"

- name: Template sshd config 
  import_role:
    name: sshd
    tasks_from: export.yml
  when: "'sshd' in group_names"
