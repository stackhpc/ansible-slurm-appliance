---
# The MIT License (MIT)

# Copyright (c) 2017-2018 Pawel Krupa, Roman Demachkovych
# Copyright (c) 2022 Steve Brasier

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

- become: false
  block:
    - name: Create local grafana dashboard directory
      tempfile:
        state: directory
      register: _tmp_dashboards
      changed_when: false
      check_mode: false

    # Use curl to solve issue #77
    - name: download grafana dashboard from grafana.net to local directory
      command: >
        curl --fail --compressed
        https://grafana.com/api/dashboards/{{ item.dashboard_id }}/revisions/{{ item.revision_id }}/download
        -o {{ _tmp_dashboards.path }}/{{ item.dashboard_id }}.json
      args:
        creates: "{{ _tmp_dashboards.path }}/{{ item.dashboard_id }}.json"
      register: _download_dashboards
      until: _download_dashboards is succeeded
      retries: 5
      delay: 2
      with_items: "{{ grafana_dashboards }}"
      when:
        - grafana_dashboards | length > 0
        - "'dashboard_id' in item"
      changed_when: false
      check_mode: false
      tags:
        - skip_ansible_lint

    - name: copy in-role grafana dashboards
      ansible.builtin.copy:
        src: "{{ item.dashboard_file }}"
        dest: "{{ _tmp_dashboards.path }}"
      loop: "{{ grafana_dashboards }}"
      when:
        - grafana_dashboards | length > 0
        - "'dashboard_file' in item"
      changed_when: false
      check_mode: false

    # As noted in [1] an exported dashboard replaces the exporter's datasource
    # name with a representative name, something like 'DS_GRAPHITE'. The name
    # is different for each datasource plugin, but always begins with 'DS_'.
    # In the rest of the data, the same name is used, but captured in braces,
    # for example: '${DS_GRAPHITE}'.
    #
    # [1] http://docs.grafana.org/reference/export_import/#import-sharing-with-grafana-2-x-or-3-0
    #
    # The data structure looks (massively abbreviated) something like:
    #
    #   "name": "DS_GRAPHITE",
    #   "datasource": "${DS_GRAPHITE}",
    #
    # If we import the downloaded dashboard verbatim, it will not automatically
    # be connected to the data source like we want it. The Grafana UI expects
    # us to do the final connection by hand, which we do not want to do.
    # So, in the below task we ensure that we replace instances of this string
    # with the data source name we want.
    # To make sure that we're not being too greedy with the regex replacement
    # of the data source to use for each dashboard that's uploaded, we make the
    # regex match very specific by using the following:
    #
    # 1. Literal boundaries for " on either side of the match.
    # 2. Non-capturing optional group matches for the ${} bits which may, or
    #    or may not, be there..
    # 3. A case-sensitive literal match for DS .
    # 4. A one-or-more case-sensitive match for the part that follows the
    #    underscore, with only A-Z, 0-9 and - or _ allowed.
    #
    # This regex can be tested and understood better by looking at the
    # matches and non-matches in https://regex101.com/r/f4Gkvg/6

    - name: Set the correct data source name in the dashboard
      ansible.builtin.replace:
        path: "{{ _tmp_dashboards.path }}/{{ ((item.0.dashboard_id | string) + '.json') if 'dashboard_id' in item.0 else item.0.dashboard_file }}"
        regexp: '"(?:\${)?{{ item.1.placeholder }}(?:})?"'
        replace: '"{{ item.1.replacement }}"'
      changed_when: false
      with_subelements:
        - "{{ grafana_dashboards }}"
        - replacements
      when:
        - grafana_dashboards | length > 0

- name: Create/Update dashboards file (provisioning)
  become: true
  copy:
    dest: "/etc/grafana/provisioning/dashboards/ansible.yml"
    content: |
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          options:
            path: "{{ grafana_data_dir }}/dashboards"
    backup: false
    owner: root
    group: grafana
    mode: 0640
  notify: restart grafana

- name: Register preexisting dashboards
  become: true
  find:
    paths: "{{ grafana_data_dir }}/dashboards"
    hidden: true
    patterns:
      - "*.json"
  register: _dashboards_pre

- name: Import grafana dashboards
  become: true
  copy:
    remote_src: yes
    src: "{{ _tmp_dashboards.path }}/" # Note trailing / to only copy contents, not directory itself
    dest: "{{ grafana_data_dir }}/dashboards/"
  notify: "provisioned dashboards changed"

- name: Register all installed dashboards
  become: true
  find:
    paths: "{{ grafana_data_dir }}/dashboards"
    hidden: true
    patterns:
      - "*.json"
  register: _dashboards_post

- name: Get dashboard lists
  set_fact:
    _dashboards_pre_list:  "{{ _dashboards_pre  | json_query('files[*].path') | default([]) }}"
    _dashboards_post_list: "{{ _dashboards_post | json_query('files[*].path') | default([]) }}"

- name: Remove installed dashboards not defined through this role
  become: true
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ _dashboards_pre_list | difference( _dashboards_post_list ) }}"
