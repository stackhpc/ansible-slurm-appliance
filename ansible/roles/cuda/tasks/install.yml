
# Based on https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#redhat8-installation

- name: Check for OFED/DOCA
  command:
    cmd: dnf list --installed rdma-core
  register: _dnf_rdma_core
  changed_when: false

- name: Assert OFED installed
  assert: 
    that: "'mlnx' in _dnf_rdma_core.stdout"
    fail_msg: "Did not find 'mlnx' in installed rdma-core package, is OFED/DOCA installed?"

- name: Install cuda repo
  get_url:
    dest: "/etc/yum.repos.d/cuda-rhel{{ ansible_distribution_major_version }}.repo"
    url: "{{ cuda_repo_url }}"

- name: Check if nvidia driver module is enabled
  ansible.builtin.command: dnf module list --enabled nvidia-driver
  changed_when: false
  failed_when: false
  register: _cuda_driver_module_enabled

- name: Enable nvidia driver module
  ansible.builtin.command: "dnf module enable -y nvidia-driver:{{ cuda_nvidia_driver_stream }}"
  register: _cuda_driver_module_enable
  when: "'No matching Modules to list' in _cuda_driver_module_enabled.stderr"
  changed_when: "'Nothing to do' not in _cuda_driver_module_enable.stdout"

- name: Read module info for list of packages
  # Even a single version of the module stream contains multiple package versions
  # so need to find the ones we want.
  # The dnf .. command returns a list of lines like
  # '                 : libnvidia-cfg-3:570.133.20-1.el9.x86_64'
  # Some are duplicated for arch x86_64/.i684
  # Some don't have arch or distro, or have .noarch
  # so want to get full package name without any suffixes so we can use
  # {{ | unique }} later to get the actual packages to dnf install.
  # The literal dot after the vesion is important so we don't get
  # e.g. -10. when we want -1.
  # So from the example line above we extract
  # ' libnvidia-cfg-3:570.133.20-1.'
  ansible.builtin.shell:
    cmd: >-
      dnf module info nvidia-driver:{{ cuda_nvidia_driver_stream }} |
      grep -o '[^:]*:{{ cuda_nvidia_driver_version }}\.'
  changed_when: false
  register: _cuda_driver_module_packages
  
- name: Install nvidia driver packages
  ansible.builtin.dnf:
    name: "{{ _cuda_driver_module_packages.stdout_lines | map('trim', ' .') | unique }}"
  register: _cuda_driver_install

- name: Check kernel has not been modified
  assert:
    that: "'kernel ' not in _cuda_driver_install.stdout | default('')" # space ensures we don't flag e.g. kernel-devel-matched
    fail_msg: "{{ _cuda_driver_install.stdout_lines | default([]) | select('search', 'kernel ') }}"

- name: Install cuda packages
  ansible.builtin.dnf:
    name: "{{ cuda_packages }}"
  when: cuda_package_version != 'none'
  register: cuda_package_install

- name: Add cuda binaries to path
  lineinfile:
    path: /etc/profile.d/sh.local
    line: 'export PATH=$PATH:$(ls -1d /usr/local/cuda-* | sort -V | tail -1)/bin'
  when: cuda_package_version != 'none'

- name: Enable NVIDIA Persistence Daemon
  systemd:
    name: nvidia-persistenced
    enabled: true
    state: "{{ cuda_persistenced_state }}"

- name: Reboot
  ansible.builtin.reboot:
    post_reboot_delay: 30
  when: cuda_package_install.changed

- name: Wait for hosts to be reachable
  wait_for_connection:
    sleep: 15
  when: cuda_package_install.changed
