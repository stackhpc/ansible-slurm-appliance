---
# Should be run on compute nodes you want to run the graphical desktop on
- name: Enable TurboVNC repo
  tags: install
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/TurboVNC/repo/main/TurboVNC.repo
    dest: /etc/yum.repos.d/TurboVNC.repo
    mode: "0644"

- name: Enable VirtualGL repo
  tags: install
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/VirtualGL/repo/main/VirtualGL.repo
    dest: /etc/yum.repos.d/VirtualGL.repo
    mode: "0644"

- name: Install EPEL
  tags: install
  ansible.builtin.dnf:
    name: epel-release

- name: Check /etc/init.d
  ansible.builtin.stat:
    path: /etc/init.d
  register: init_d

- name: Move OFED-installed init scripts
  # turbovnc installs chkconfig which symlinks /etc/init.d from /etc/rc.d/init.d
  # but OFED has already created that and installed files in it.
  # See https://access.redhat.com/solutions/6969215
  ansible.builtin.command:
    cmd: mv /etc/init.d /etc/init.d.orig
    creates: /etc/init.d.orig
  when:
    - init_d.stat.exists
    - not init_d.stat.islnk

- name: Install VNC-related packages
  tags: install
  ansible.builtin.dnf:
    name:
      - "turbovnc-{{ openondemand_turbovnc_version }}"
      - nmap-ncat
      - python3.9
      - dbus-x11
      - "VirtualGL-{{ openondemand_virtualgl_version }}"
  # TODO: really we only want to do this when we've got cuda
  # but that would mean re-running this during cuda builds ...

- name: Stop turbovnc service
  # This is not actually required
  ansible.builtin.systemd:
    name: tvncserver
    state: stopped
    enabled: false

- name: Replace OFED-installed init scripts
  ansible.builtin.copy:
    src: /etc/init.d.orig/ # trailing / to get contents
    dest: /etc/init.d
    remote_src: true
    directory_mode: "preserve"
    mode: "preserve"
  when:
    - init_d.stat.exists
    - not init_d.stat.islnk

- name: Install Xfce desktop
  tags: install
  ansible.builtin.dnf:
    name: "@Xfce"
  when: appliances_mode != 'configure' # dnf group/module installs aren't idempotent so only run during build

# - name: Ensure python3.9 installed
#   dnf:
#     name: python39
#   tags: install

- name: Install websockify venv
  # Requires separate step so that the upgraded pip is used to install packages
  ansible.builtin.pip:
    name: pip
    state: latest # noqa: package-latest
    virtualenv: /opt/websockify-py39
    virtualenv_command: python3.9 -m venv
  tags: install

- name: Install websockify package in venv
  ansible.builtin.pip:
    name: websockify
    virtualenv: /opt/websockify-py39
    virtualenv_command: python3 -m venv
  tags: install

- name: Symlink websockify to where Open Ondemand expects # noqa: args[module]
  ansible.builtin.file: "{{ item }}"
  loop:
    - path: /opt/websockify
      state: directory
    - src: /opt/websockify-py39/bin/websockify
      dest: /opt/websockify/run
      state: link
- name: Disable screensaver # as users might not have passwords
  ansible.builtin.dnf:
    name: xfce4-screensaver
    state: absent
  when: not (openondemand_desktop_screensaver | bool)

- name: Configure TurboVNC to use VirtualGL by default
  # See https://turbovnc.org/Documentation/Compatibility30#threedwm
  ansible.builin.lineinfile:
    path: /etc/turbovncserver.conf
    regexp: '^#? \$useVGL = '
    line: '$useVGL=1;'
  # TODO: make conditional?
