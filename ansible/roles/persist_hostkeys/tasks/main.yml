---
- name: Generate persistent hostkeys in state directory
  delegate_to: "{{ persist_hostkeys_state_server }}"
  block:
    - name: Ensure hostkeys directory exists on persistent storage
      ansible.builtin.file:
        path: "{{ persist_hostkeys_state_dir }}"
        state: directory
        owner: root
        group: root
        mode: "0600"

    - name: Check for existing hostkeys
      ansible.builtin.find:
        paths: "{{ persist_hostkeys_state_dir }}/"
      register: _files_found

    - name: Generate hostkeys # noqa: no-changed-when
      when: _files_found.matched == 0
      ansible.builtin.shell:
        # ssh-keygen -A needs a directory with an /etc/ssh suffix to write hostkeys into
        cmd: |
          mkdir -p {{ persist_hostkeys_state_dir }}/etc/ssh
          ssh-keygen -A -N '' -f {{ persist_hostkeys_state_dir }}
          mv {{ persist_hostkeys_state_dir }}/etc/ssh/* {{ persist_hostkeys_state_dir }}
          rm -rf {{ persist_hostkeys_state_dir }}/etc/ssh

    - name: Get created key names
      ansible.builtin.find:
        path: "{{ persist_hostkeys_state_dir }}/"
      register: _find_ssh_keys

    - name: Create in-memory copies of keys
      ansible.builtin.slurp:
        src: "{{ item.path }}"
      loop: "{{ _find_ssh_keys.files }}"
      register: _slurp_keys

- name: Copy keys to hosts
  no_log: true
  ansible.builtin.copy:
    content: "{{ item.content | b64decode }}"
    dest: "/etc/ssh/{{ item.source | regex_search('[^/]+$') }}"
    mode: "0644"
  loop: "{{ _slurp_keys.results }}"

- ansible.builtin.meta: reset_connection
