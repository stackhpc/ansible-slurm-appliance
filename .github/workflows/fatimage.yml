name: Build fat image
on:
  workflow_dispatch:
      inputs:
        ci_cloud:
          description: 'Select the CI_CLOUD'
          required: true
          type: choice
          options:
            - LEAFCLOUD
            - SMS
            - ARCUS

jobs:
  openstack:
    name: openstack-imagebuild
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.builds.label }}
      cancel-in-progress: true
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false # allow other matrix jobs to continue even if one fails
      matrix: # build RL8+OFED, RL9+OFED, RL9+OFED+CUDA versions
        builds:
          - label: openhpc-RL8-ofed
            source_image_name: RL8-ofed
            inventory_groups: 'control,login,compute'
          - label: openhpc-RL9-ofed
            source_image_name: RL9-ofed
            inventory_groups: 'control,login,compute'
          - label: openhpc-RL9-cuda
            source_image_name: RL9-cuda
            inventory_groups: 'control,login,compute'
    env:
      ANSIBLE_FORCE_COLOR: True
      OS_CLOUD: openstack
      CI_CLOUD: ${{ github.event.inputs.ci_cloud }}
    steps:
      - uses: actions/checkout@v2

      - name: Record settings for CI cloud
        run: |
          echo CI_CLOUD: ${{ env.CI_CLOUD }}

      - name: Setup ssh
        run: |
          set -x
          mkdir ~/.ssh
          echo "${{ secrets[format('{0}_SSH_KEY', env.CI_CLOUD)] }}" > ~/.ssh/id_rsa
          chmod 0600 ~/.ssh/id_rsa
        shell: bash

      - name: Add bastion's ssh key to known_hosts
        run: cat environments/.stackhpc/bastion_fingerprints >> ~/.ssh/known_hosts
        shell: bash

      - name: Install ansible etc
        run: dev/setup-env.sh

      - name: Write clouds.yaml
        run: |
          mkdir -p ~/.config/openstack/
          echo "${{ secrets[format('{0}_CLOUDS_YAML', env.CI_CLOUD)] }}" > ~/.config/openstack/clouds.yaml
        shell: bash

      - name: Setup environment
        run: |
          . venv/bin/activate
          . environments/.stackhpc/activate

      - name: Select branch-specific or latest nightly image
        id: select_source_image
        run: |
          . venv/bin/activate
          . environments/.stackhpc/activate
          BRANCH=${{ github.ref_name }}
          BRANCH_VERSION=${BRANCH//\//-} # replace '/' with '-' using bash parameter expansion
          NIGHTLY_IMAGE_ID=$( \
            openstack image show -c id -f value ${{ matrix.builds.source_image_name }}-${BRANCH_VERSION} || \
            openstack image show -c id -f value ${{ matrix.builds.source_image_name }}-latest \
          )
          echo selected source_image $NIGHTLY_IMAGE_ID: $(openstack image show -c name -f value $NIGHTLY_IMAGE_ID)
          echo "source_image_id=$NIGHTLY_IMAGE_ID" >> "$GITHUB_OUTPUT"
      
      - name: Build fat image with packer
        id: packer_build
        run: |
          set -x
          . venv/bin/activate
          . environments/.stackhpc/activate
          cd packer/
          packer init .

          packer build \
          -on-error=${{ vars.PACKER_ON_ERROR }} \
          -var-file=$PKR_VAR_environment_root/${{ env.CI_CLOUD }}.pkrvars.hcl \
          -var source_image=${{ steps.select_source_image.outputs.source_image_id }} \
          -var image_name=${{ matrix.builds.label }} \
          -var inventory_groups=${{ matrix.builds.inventory_groups }} \
          openstack.pkr.hcl
        env:
          PACKER_LOG: '1'

      - name: Get created image names from manifest
        id: manifest
        run: |
          . venv/bin/activate
          IMAGE_ID=$(jq --raw-output '.builds[-1].artifact_id' packer/packer-manifest.json)
          while ! openstack image show -f value -c name $IMAGE_ID; do
            sleep 5
          done
          IMAGE_NAME=$(openstack image show -f value -c name $IMAGE_ID)
          echo $IMAGE_ID > image-id.txt
          echo $IMAGE_NAME > image-name.txt

      - name: Upload manifest artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-details-${{ matrix.builds.label }}
          path: |
            ./image-id.txt
            ./image-name.txt
          overwrite: true
