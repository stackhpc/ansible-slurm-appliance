---

# See: https://github.com/stackhpc/ansible-role-cluster-nfs
# for variable definitions

nfs_server_default: "{{ groups['control'] | first }}" # avoid using hostvars for compute-init

nfs_configurations:
  - comment: Export /exports/home from Slurm control node as /home
    nfs_enable:
        server:  "{{ inventory_hostname in groups['control'] }}"
        # Don't mount share on server where it is exported from...
        # Could do something like `nfs_clients: "{{ 'nfs_servers' not in group_names }}"` instead.
        clients: "{{ inventory_hostname in groups['cluster'] and inventory_hostname not in groups['control'] }}"
    nfs_server: "{{ nfs_server_default }}"
    nfs_export: "/exports/home" # assumes skeleton TF is being used
    nfs_client_mnt_point: "/home"

  - comment: Export /exports/cluster from Slurm control node
    nfs_enable:
        server: "{{ inventory_hostname in groups['control'] }}"
        clients: false
    nfs_export: "/exports/cluster"

  - comment: Export hostkeys from Slurm control node to OOD
    nfs_enable:
        server:  "{{ inventory_hostname in groups['control'] }}"
        clients: "{{ inventory_hostname in groups['openondemand'] or inventory_hostname in groups['login'] }}"
    nfs_export: "{{ appliances_state_dir | default('/var/lib/state') }}/hostkeys" # needs to be defaulted to run but should be skipped on clients where appliances_state_dir is otherwise undefined
    nfs_server: "{{ nfs_server_default }}"
    nfs_client_mnt_point: "/mnt/hostkeys"
    nfs_client_mnt_options: "x-systemd.required-by=zenith-ood.service,x-systemd.before=zenith-ood.service"
