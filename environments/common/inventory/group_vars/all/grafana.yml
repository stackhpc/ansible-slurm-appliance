---

# See: https://github.com/cloudalchemy/ansible-grafana
# for variable definitions.
grafana_version: 8.4.6-1

# need to copy some role defaults here so we can use in inventory:
grafana_port: 3000

# Configure internal address & URL - note "api" means "internal" to cloudalchemy.grafana but "external" to appliance:
grafana_api_address: "{{ hostvars[groups['grafana'].0].internal_address }}"
grafana_api_url: "http://{{ grafana_api_address }}:{{ grafana_port }}"

# Configure external address, with external URL depending on whether we are using Open Ondemand as a proxy
grafana_address: "{{ hostvars[groups['grafana'].0].api_address }}"
grafana_url_direct: "http://{{ grafana_address }}:{{ grafana_port }}"
grafana_url_openondemand_proxy: "https://{{ openondemand_servername }}/node/{{ groups['grafana'].0 }}/{{ grafana_port }}"
grafana_url: "{{ grafana_url_openondemand_proxy if groups['openondemand'] | count > 0 else grafana_url_direct }}"
grafana_serve_from_sub_path: "{{ groups['openondemand'] | count > 0 }}"

grafana_dashboards_default:
  # node exporter slurm:
  - dashboard_id: 13427
    replacements:
      - placeholder: DS_PROMETHEUS
        replacement: prometheus
      - placeholder: DS_ELASTICSEARCH
        replacement: slurmstats
    revision_id: 1
  # openhpc slurm:
  - dashboard_file: openhpc-slurm.json
    replacements:
      - placeholder: DS_PROMETHEUS
        replacement: prometheus
      - placeholder: DS_SLURMSTATS
        replacement: slurmstats
  # slurm jobs overview
  - dashboard_file: slurm-jobs.json
    replacements:
      - placeholder: DS_PROMETHEUS
        replacement: prometheus
      - placeholder: DS_SLURMSTATS
        replacement: slurmstats

grafana_dashboards: "{{ grafana_dashboards_default + (openondemand_dashboard if groups.get('openondemand') else []) }}"

grafana_security:
    admin_user: grafana
    admin_password: "{{ vault_grafana_admin_password }}"
    allow_embedding: true

grafana_datasources:
  - name: prometheus
    ds_type: prometheus
    ds_url: "http://{{ prometheus_address }}:9090" # default prometheus port
  - name: slurmstats
    ds_type: elasticsearch
    ds_url: "https://{{ elasticsearch_address }}:9200"
    basic_auth_user: admin
    basic_auth_password: "{{ vault_elasticsearch_admin_password }}"
    with_credentials: true
    tls_skip_verify: true
    time_field: "@timestamp"
    database: "filebeat-*"
    es_version: 70

# want to set grafana_server.serve_from_sub_path if have Open Ondemand to proxy:
grafana_server:
  # role defaults:
  protocol: http
  enforce_domain: false
  socket: ""
  cert_key: ""
  cert_file: ""
  enable_gzip: false
  static_root_path: public
  router_logging: false
  # appliance specific:
  serve_from_sub_path: "{{ grafana_serve_from_sub_path }}"


grafana_auth_anonymous: false # Enable anonymous View-only login - see implications: https://grafana.com/docs/grafana/latest/administration/security/#implications-of-enabling-anonymous-access-to-dashboards

_grafana_auth_anon_cfg:
  anonymous:
    org_name: "Main Org."
    org_role: Viewer
grafana_auth: "{{ _grafana_auth_anon_cfg if grafana_auth_anonymous | bool else {} }}"
_grafana_auth_is_anonymous: "{{ grafana_auth.anonymous | default({}) | length > 0 }}"
