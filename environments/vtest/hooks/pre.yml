# - name: Import parent hook
#   vars:
#     appliances_environment_root: "{{ lookup('env', 'APPLIANCES_ENVIRONMENT_ROOT') }}"
#   import_playbook: "{{ appliances_environment_root }}/../nrel/hooks/pre.yml"

- name: "add a stack admin user"
  hosts: all
  # tags: pre_tasks_all
  become: true
  gather_facts: False
  tasks:
    - name: does localhome/stack dir exist
      stat:
        path: /localhome/stack
      register: localstack

    - include_role:
        name: vs.core.stack_user
      when: not localstack.stat.exists
  tags:
    - add_stack_user

- name: cp rocky home to /localhome/rocky
  hosts: all
  # tags: pre_tasks_all
  become: true
  gather_facts: False
  tasks:
    - name: does /home/rocky dir exist
      stat:
        path: /var/lib/rocky/.ssh/authorized_keys
      register: homerocky

    - name: does localhome dir exist
      stat:
        path: /localhome/rocky
      register: localhomerocky

    - name: does /var/lib/rocky dir exist
      stat:
        path: /var/lib/rocky/.ssh/authorized_keys
      register: varlibrocky


    - name: cp homerocky to localhome dir
      shell: |
        cp -a /home/rocky /localhome/rocky
      when: 
        - not localhomerocky.stat.exists
        - homerocky.stat.exists

    - name: cp auth_keys
      shell: |
        cp -a /home/rocky/.ssh /var/lib/rocky/.ssh
      when: 
        - varlibrocky.stat.exists
        - homerocky.stat.exists
      
    - name: Hack passwd file for rocky user
      ansible.builtin.lineinfile:
        path: /etc/passwd
        regexp: '^rocky.*1000.*'
        line: "rocky:x:1000:1000:rockyUser:/localhome/rocky:/bin/bash"
      when: 
        - varlibrocky.stat.exists
        - not localhomerocky.stat.exists 
  tags:
    - rocky_localhome

- name: "Do the preliminary node setups"
  hosts: all
  # tags: pre_tasks_all
  become: true
  tasks:
    - name: does vs_pre_complete.txt exist 
      stat:
        path: /root/vs_pre_complete.txt
      register: vs_pre_complete

    - include_role:
        name: vshpc.prov.pre-tasks
      when: not vs_pre_complete.stat.exists

# TODO: KBENDL - check compatibility with new playbook
- name: "NREL pre - Mount cephfs volumes"
  hosts: all
  tags:
    - vs_pre
    - aco.core.cephfs
  become: true
  tasks:
    - name: does ceph exist 
      stat:
        path: /etc/ceph
      register: vs_does_cephdir
    - include_role:
        name: aco.core.cephfs
      tags:
        - aco.core.cephfs
      when: not vs_does_cephdir.stat.exists
