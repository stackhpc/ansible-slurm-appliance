`configure' configures slurm 23.02 to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr/local]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/usr/local/bin', `/usr/local/lib' etc.  You can specify
an installation prefix other than `/usr/local' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/slurm]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
  --target=TARGET   configure for building compilers for TARGET [HOST]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-silent-rules   less verbose build output (undo: "make V=1")
  --disable-silent-rules  verbose build output (undo: "make V=0")
  --enable-maintainer-mode
                          enable make rules and dependencies not useful (and
                          sometimes confusing) to the casual installer
  --enable-dependency-tracking
                          do not reject slow dependency extractors
  --disable-dependency-tracking
                          speeds up one-time build
  --enable-shared[=PKGS]  build shared libraries [default=yes]
  --enable-static[=PKGS]  build static libraries [default=yes]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --enable-pam            enable PAM (Pluggable Authentication Modules)
                          support
  --enable-load-env-no-login
                          enable --get-user-env option to load user
                          environment without .login
  --disable-x11           disable internal X11 support
  --enable-selinux        enable internal SELinux support
  --disable-glibtest      do not try to compile and run a test GLIB program
  --disable-gtktest       do not try to compile and run a test GTK+ program
  --enable-cray-network   Run Slurm on a non-Cray system with a Cray network
  --enable-really-no-cray Disable cray support for eslogin machines
  --disable-optimizations disable optimizations (sets -O0)
  --enable-developer      enable developer options (asserts, -Werror - also
                          sets --enable-debug as well)
  --disable-debug         disable debugging symbols and compile with
                          optimizations
  --enable-memory-leak-debug
                          enable memory leak debugging code for development
  --enable-front-end      enable slurmd operation on a front-end
  --disable-partial-attach
                          disable debugger partial task attach support
  --enable-salloc-kill-cmd
                          salloc should kill child processes at job
                          termination
  --disable-slurmrestd    disable slurmrestd support
  --enable-multiple-slurmd
                          enable multiple-slurmd support
  --enable-deprecated     enable deprecated

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --without-rpath         Do not include rpath in build
  --with-mysql_config=PATH
                          Specify path of directory where mysql_config binary
                          exists
  --with-pic[=PKGS]       try to use only PIC/non-PIC objects [default=use
                          both]
  --with-aix-soname=aix|svr4|both
                          shared library versioning (aka "SONAME") variant to
                          provide on AIX, [default=aix].
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-sysroot[=DIR]    Search for dependent libraries within DIR (or the
                          compiler's sysroot if not specified).
  --with-pam_dir=PATH     Specify path to PAM module installation
  --without-shared-libslurm
                          statically link to libslurm.o instead of the shared
                          libslurm lib - can dramatically increase the
                          footprint of Slurm.
  --with-json=PATH        Specify path to json-c installation
  --with-jwt=PATH         Specify path to jwt installation
  --with-http-parser=PATH Specify path to HTTP Parser installation
  --with-yaml=PATH        Specify path to libyaml installation
  --with-dimensions=N     set system dimension count for generic computer
                          system
  --with-ofed=PATH        Specify path to ofed installation
  --with-hdf5=yes/no/PATH location of h5cc or h5pcc for HDF5 configuration
  --with-lz4=PATH         Specify path to liblz4 installation
  --with-hwloc=PATH       Specify path to hwloc installation
  --with-nvml=PATH        Specify path to CUDA installation
  --with-rsmi=PATH        Specify path to rsmi installation
  --with-oneapi=PATH      Specify path to oneAPI installation
  --with-pmix=PATH        Specify path to pmix installation(s). Multiple
                          version directories can be ':' delimited.
  --with-freeipmi=PATH    Specify path to freeipmi installation
  --with-rrdtool=PATH     Specify path to rrdtool-devel installation
  --with-ucx=PATH         Build with Unified Communication X library support
  --with-rdkafka=PATH     Specify path to librdkafka installation
  --with-bpf=PATH         Specify path to bpf header
  --with-cray_dir=PATH    Specify path to Cray file installation - /opt/cray
                          by default
  --with-datawarp=PATH    Specify path to DataWarp installation
  --with-hpe-slingshot=PATH
                          Specify path to HPE Slingshot installation dir
  --with-slurmctld-port=N set slurmctld default port [6817]
  --with-slurmd-port=N    set slurmd default port [6818]
  --with-slurmdbd-port=N  set slurmdbd default port [6819]
  --with-slurmctld-port-count=N
                          set slurmctld default port count [1]
  --with-slurmrestd-port=N
                          set slurmrestd default port [6820]
  --with-netloc=PATH      Specify path to netloc installation
  --without-readline      compile without readline support
  --with-systemdsystemunitdir=DIR
                          Directory for systemd service files
  --with-munge=PATH       Specify path to munge installation
  --with-libcurl=PREFIX   look for the curl library in PREFIX/lib and headers
                          in PREFIX/include

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CXX         C++ compiler command
  CXXFLAGS    C++ compiler flags
  LT_SYS_LIBRARY_PATH
              User-defined run-time library search path.
  CXXCPP      C++ preprocessor
  PKG_CONFIG  path to pkg-config utility
  PKG_CONFIG_PATH
              directories to add to pkg-config's search path
  PKG_CONFIG_LIBDIR
              path overriding pkg-config's built-in search path
  CPP         C preprocessor
  libselinux_CFLAGS
              C compiler flags for libselinux, overriding pkg-config
  libselinux_LIBS
              linker flags for libselinux, overriding pkg-config
  dbus_CFLAGS C compiler flags for dbus, overriding pkg-config
  dbus_LIBS   linker flags for dbus, overriding pkg-config
  CHECK_CFLAGS
              C compiler flags for CHECK, overriding pkg-config
  CHECK_LIBS  linker flags for CHECK, overriding pkg-config
  GLIB_CFLAGS C compiler flags for GLIB, overriding pkg-config
  GLIB_LIBS   linker flags for GLIB, overriding pkg-config
  GLIB_GENMARSHAL
              value of glib_genmarshal for glib-2.0, overriding pkg-config
  GOBJECT_QUERY
              value of gobject_query for glib-2.0, overriding pkg-config
  GLIB_MKENUMS
              value of glib_mkenums for glib-2.0, overriding pkg-config
  GLIB_COMPILE_RESOURCES
              value of glib_compile_resources for gio-2.0, overriding
              pkg-config
  lua_CFLAGS  C compiler flags for lua, overriding pkg-config
  lua_LIBS    linker flags for lua, overriding pkg-config

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to the package provider.
slurm home page: <https://slurm.schedmd.com>.
